# -*- coding: utf-8 -*-
"""
Created on Thu Apr 18 22:38:06 2019

@author: WU
"""
ml=[1,3,1,1,1,1,1,1,1,3]    #万胡牌需求列表，依次代表：门牌，1，2，……,9
sl=[1,3,1,1,1,1,1,1,1,3]    #索胡牌需求列表，同上
pl=[1,3,1,1,1,1,1,1,1,3]    #筒胡牌需求列表，同上
w=[0]*10    #判断列表
l=[]    #储存列表

word= input()   #输入初始十三张牌
for i in range(len(word)):
    if word[i]=='m' and ml[int(word[i-1])]!=0:  #当当前字符为花色时，以前一个数字为索引，检查对应花色列表中元素是否为零（是否已经满足需求）
        ml[int(word[i-1])]+= -1 #如果未满足需求，取进手牌，对应需求数减一
    elif word[i]=='m' and ml[0]==1:#需求已满足的情况下，如果未有门牌，则将当前多余牌作为门牌，门牌需求数减一
        ml[0]=0 
    elif word[i]=='s' and sl[int(word[i-1])]!=0:    #同上
        sl[int(word[i-1])]+= -1
    elif word[i]=='s' and sl[0]==1:
        sl[0]=0
    elif word[i]=='p' and pl[int(word[i-1])]!=0:    #同上
        pl[int(word[i-1])]+= -1
    elif word[i]=='p' and pl[0]==1:
        pl[0]=0

choice= input() #输入待选十七张牌
for i in range(len(choice)):
    if ml==w or sl==w or pl==w: #每摸一次牌均进行一次判断：三个需求列表是否有任一个所有元素为零（满足胡牌条件)
        l.append(i) #如是，将当前索引值加入列表，并离开循环（停止摸牌）
        break
    else:
        if choice[i]=='m' and ml[int(choice[i-1])]!=0:  #继续摸牌，进行与对初始十三张相似的操作
            ml[int(choice[i-1])]+= -1
        elif choice[i]=='m' and ml[0]==1:
            ml[0]=0
        elif choice[i]=='s' and sl[int(choice[i-1])]!=0:
            sl[int(choice[i-1])]+= -1
        elif choice[i]=='s' and sl[0]==1:
            sl[0]=0
        elif choice[i]=='p'and pl[int(choice[i-1])]!=0:
            pl[int(choice[i-1])]+= -1
        elif choice[i]=='p' and pl[0]==1:
            pl[0]=0
